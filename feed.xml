<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://junsukha.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://junsukha.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-01-31T22:45:15+00:00</updated><id>https://junsukha.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">c++</title><link href="https://junsukha.github.io/blog/2024/c++/" rel="alternate" type="text/html" title="c++"/><published>2024-01-19T16:00:00+00:00</published><updated>2024-01-19T16:00:00+00:00</updated><id>https://junsukha.github.io/blog/2024/c++</id><content type="html" xml:base="https://junsukha.github.io/blog/2024/c++/"><![CDATA[<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">class</span> <span class="nc">GfG</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="k">static</span> <span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
    <span class="n">GfG</span><span class="p">()</span> <span class="p">{</span>
        <span class="n">x</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="c1">// static member function</span>
    <span class="c1">// static void printMsg() { cout &lt;&lt; "Welcome to GfG!" &lt;&lt; x; }</span>
<span class="p">};</span>

<span class="kt">int</span> <span class="n">GfG</span><span class="o">::</span><span class="n">x</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span> <span class="c1">// just like static member function</span>
 
<span class="c1">// main function</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">GfG</span> <span class="n">obj1</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">obj1</span><span class="p">.</span><span class="n">x</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="n">obj1</span><span class="p">.</span><span class="n">x</span><span class="o">++</span><span class="p">;</span>
    <span class="n">GfG</span> <span class="n">obj2</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">obj2</span><span class="p">.</span><span class="n">x</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

    <span class="c1">// invoking a static member function</span>
    <span class="c1">// GfG::printMsg();</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="learning"/><summary type="html"><![CDATA[about c++]]></summary></entry><entry><title type="html">Tips</title><link href="https://junsukha.github.io/blog/2024/learning/" rel="alternate" type="text/html" title="Tips"/><published>2024-01-19T16:00:00+00:00</published><updated>2024-01-19T16:00:00+00:00</updated><id>https://junsukha.github.io/blog/2024/learning</id><content type="html" xml:base="https://junsukha.github.io/blog/2024/learning/"><![CDATA[<h1 id="linux">Linux</h1> <h2 id="nvidia-cuda-toolkit-multiple-versions">nvidia cuda toolkit multiple versions</h2> <p>Shouldn’t just install deb files. Also, follow specfic instructions installing .run local files.<br/> <a href="https://towardsdatascience.com/managing-multiple-cuda-versions-on-a-single-machine-a-comprehensive-guide-97db1b22acdc">link</a></p> <p>This also covers this topic.<br/> <a href="https://wiki.cs.umd.edu/gamma/view/Installing_multiple_versions_of_cuda_in_a_machine">link</a></p> <hr/> <h2 id="installing-nvidia-driver">Installing nvidia driver</h2> <p><a href="https://www.linuxcapable.com/install-nvidia-drivers-on-ubuntu-linux/">link</a></p> <p>(This process is called “Install NVIDIA Drivers with Ubuntu Repository using CLI”)<br/> <code class="language-plaintext highlighter-rouge">sudo apt autoremove nvidia* --purge</code><br/> <code class="language-plaintext highlighter-rouge">sudo apt update</code><br/> <code class="language-plaintext highlighter-rouge">sudo apt upgrade</code> &lt;- I don’t know if this helped but I did it<br/> <code class="language-plaintext highlighter-rouge">ubuntu-drivers devices</code> &lt;- I first installed 545 but had an issue. So did<br/> <code class="language-plaintext highlighter-rouge">sudo apt autoremove nvidia* --purge</code> <code class="language-plaintext highlighter-rouge">sudo apt install nvidia-driver-545</code> <br/> <code class="language-plaintext highlighter-rouge">sudo reboot</code></p> <p>There’s also a method “Install NVIDIA Drivers using graphics-drivers/ppa on Ubuntu”</p> <p>Stick to using Ubuntu Repository if possible</p> <h2 id="apt-apt-get-aptitude">apt, apt-get, aptitude</h2> <p>Sometimes aptitude helps a lot.</p> <h2 id="be-cautious-when-updating-nvidia-driver-and-installing-nvidia-cuda-toolkit">Be cautious when updating nvidia driver and installing nvidia cuda toolkit</h2> <hr/> <h1 id="ssh">SSH</h1> <h1 id="mlops">MLops</h1> <h2 id="basic-usage-of-psycopg">basic usage of psycopg</h2> <p><a href="https://www.psycopg.org/docs/usage.html#query-parameters">Basic module usage — Psycopg 2.9.9 documentation</a></p> <hr/> <h2 id="close-and-remove-a-container">close and remove a container</h2> <div class="language-docker highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker stop "CONTAINTER ID"
docker rm "CONTAINER ID"
</code></pre></div></div> <p>Use <code class="language-plaintext highlighter-rouge">docker ps -a</code> to see all containers</p> <hr/> <h2 id="host-container">host, container</h2> <p><code class="language-plaintext highlighter-rouge">docker run -p 127.0.0.1:80:8080/tcp</code><br/> This means to bind port 8080 of the container to TCP port 80 on 127.0.0.1 of the host machine.</p> <hr/> <h2 id="any-installation-in-a-running-container-will-be-lost-as-soon-as-exiting-the-container">Any installation in a running container will be lost as soon as exiting the container</h2> <p><a href="https://stackoverflow.com/questions/63027514/install-package-in-running-docker-container">dockerfile - Install package in running docker container - Stack Overflow</a></p> <hr/> <h2 id="add-port-tunneling-between-mac-local-and-linux-remote-insidee-a-linux-remote-ie-i-ssh-into-linux-remote-from-mac-local">add port tunneling between mac (local) and linux (remote) insidee a linux (remote), i.e. I ssh into linux (remote) from mac (local)</h2> <p>press <code class="language-plaintext highlighter-rouge">shift</code> and <code class="language-plaintext highlighter-rouge">~</code> and <code class="language-plaintext highlighter-rouge">c</code>. Hold <code class="language-plaintext highlighter-rouge">shift</code> while hitting <code class="language-plaintext highlighter-rouge">~</code> and <code class="language-plaintext highlighter-rouge">c</code>.<br/> <code class="language-plaintext highlighter-rouge">-L 8888:hotcake:8888</code> : connect mac’s 8888 to hotcake’s (server) 8888.<br/> <a href="https://unix.stackexchange.com/questions/697825/add-port-forwarding-to-a-running-ssh-session">openssh - Add port forwarding to a running SSH session - Unix &amp; Linux Stack Exchange</a></p> <hr/> <h2 id="multiple-port-tunneling-when-ssh">multiple port tunneling when ssh</h2> <p><a href="https://stackoverflow.com/questions/29936948/ssh-l-forward-multiple-ports">ssh -L forward multiple ports - Stack Overflow</a></p> <hr/> <h2 id="how-to-find-a-docker-host-machines-ip-address-from-inside-a-container">how to find a docker host machine’s ip address from inside a container?</h2> <p><code class="language-plaintext highlighter-rouge">sudo ip addr show docker0</code> gives ip address of docker host machine (in my case 172.17.0.1)<br/> Also can identify ip address by <code class="language-plaintext highlighter-rouge">docker network inspect bridge</code><br/> Both commands above are run in hotcake (the machine sshed into)<br/> To see an ip address of a container, run <code class="language-plaintext highlighter-rouge">ip addr show eth0</code> inside a container.</p> <ul> <li>ex: <code class="language-plaintext highlighter-rouge">root@e77f6a1b3740:/# ip addr show eth0</code></li> </ul> <p><a href="https://stackoverflow.com/questions/24319662/from-inside-of-a-docker-container-how-do-i-connect-to-the-localhost-of-the-mach">nginx - From inside of a Docker container, how do I connect to the localhost of the machine? - Stack Overflow</a></p> <hr/> <h2 id="03-model-registry-2-save-model-to-registry">03. Model Registry 2) Save Model to Registry</h2> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">[</span><span class="sh">"</span><span class="s">MLFLOW_S3_ENDPOINT_URL</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="sh">"</span><span class="s">http://172.17.0.1:9005</span><span class="sh">"</span> <span class="c1"># when running in a container, should use host ip address instead of localhost?
</span><span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">[</span><span class="sh">"</span><span class="s">MLFLOW_TRACKING_URI</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="sh">"</span><span class="s">http://172.17.0.1:5001</span><span class="sh">"</span>
</code></pre></div></div> <p>Orignal version uses <code class="language-plaintext highlighter-rouge">"http://localhost:9005"</code> and <code class="language-plaintext highlighter-rouge">"http://localhost:5001"</code>. 9005 and 5001 are ports of Linux (remote machine) and are connected to 9091 and 9092 of mac (local) individually.</p> <hr/> <h2 id="how-to-debug-inside-a-container-with-vscode">How to debug inside a container with vscode</h2> <p>https://www.youtube.com/watch?v=w77D5KuJ7eE</p> <p>I think there are two ways: 1) access to a container with vscode from local (mac) 2) access to a conatiner with vscode from remote (linux); need to ssh from mac first</p> <p>Method 1): follow the video</p> <p>Method 2):</p> <ul> <li>Install <code class="language-plaintext highlighter-rouge">Remote Development</code> extension (I thought, for this method, the extension should be installed in linux machine but accessing container also works when the extension is installed on mac)</li> <li>click a bottom left button and select <code class="language-plaintext highlighter-rouge">access to running container</code></li> <li>choose a container (only currently running containers are visible)</li> </ul> <hr/> <h2 id="pushing-to-a-repo-that-i-cloned-from-someone-elses">Pushing to a repo that I cloned from someone else’s</h2> <p>https://stackoverflow.com/questions/18200248/cloning-a-repo-from-someone-elses-github-and-pushing-it-to-a-repo-on-my-github</p> <ol> <li>Create a new repository at http://github.com (don’t initialize README, .gitignore, license)</li> <li>Clone a repo of someone else’s to my local machine<br/> git clone</li> </ol> <h1 id="dl">DL</h1> <h1 id="c">c++</h1> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">class</span> <span class="nc">GfG</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="k">static</span> <span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
    <span class="n">GfG</span><span class="p">()</span> <span class="p">{</span>
        <span class="n">x</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="c1">// static member function</span>
    <span class="c1">// static void printMsg() { cout &lt;&lt; "Welcome to GfG!" &lt;&lt; x; }</span>
<span class="p">};</span>

<span class="kt">int</span> <span class="n">GfG</span><span class="o">::</span><span class="n">x</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span> <span class="c1">// just like static member function</span>
 
<span class="c1">// main function</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">GfG</span> <span class="n">obj1</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">obj1</span><span class="p">.</span><span class="n">x</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="n">obj1</span><span class="p">.</span><span class="n">x</span><span class="o">++</span><span class="p">;</span>
    <span class="n">GfG</span> <span class="n">obj2</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">obj2</span><span class="p">.</span><span class="n">x</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

    <span class="c1">// invoking a static member function</span>
    <span class="c1">// GfG::printMsg();</span>
<span class="p">}</span>
</code></pre></div></div> <h1 id="pytorch">Pytorch</h1> <h2 id="torch-includes-cuda-toolkit">torch includes cuda toolkit</h2> <p>pytorch binary includes cuda toolkit. But it’s not a bad idea to match local cuda toolkit and torch cuda toolkit.</p> <p>keywords: pytorch binary, build from source</p> <hr/> <h2 id="cuda-related-issue-while-running-a-model">CUDA related issue while running a model</h2> <p>First thing to try is different versions; different python, pytorch, cuda versions.</p> <hr/> <h2 id="torch-20x-has-issue-with-cuda">torch 2.0.x has issue with cuda</h2> <p>Don’t use torch 2.0.x versions.</p> <hr/> <h1 id="etc">ETC</h1> <hr/>]]></content><author><name></name></author><category term="learning"/><summary type="html"><![CDATA[what I learned from debugging]]></summary></entry><entry><title type="html">Ppo</title><link href="https://junsukha.github.io/blog/2024/ppo/" rel="alternate" type="text/html" title="Ppo"/><published>2024-01-15T00:00:00+00:00</published><updated>2024-01-15T00:00:00+00:00</updated><id>https://junsukha.github.io/blog/2024/ppo</id><content type="html" xml:base="https://junsukha.github.io/blog/2024/ppo/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">miscellaneous</title><link href="https://junsukha.github.io/blog/2023/etc/" rel="alternate" type="text/html" title="miscellaneous"/><published>2023-12-22T21:30:00+00:00</published><updated>2023-12-22T21:30:00+00:00</updated><id>https://junsukha.github.io/blog/2023/etc</id><content type="html" xml:base="https://junsukha.github.io/blog/2023/etc/"><![CDATA[<h2 id="setting-zsh-as-default-terminal-in-ssh-remote-linux-vscode-terminal">Setting zsh as default terminal in SSH remote linux vscode terminal</h2> <p><a href="https://stackoverflow.com/questions/55978281/how-do-i-configure-a-different-shell-for-a-vs-code-ssh-remote">link</a></p> <p>Add</p> <div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">{</span>
    <span class="s2">"terminal.integrated.defaultProfile.linux"</span>: <span class="s2">"zsh"</span>,
<span class="o">}</span>
</code></pre></div></div> <p>to <code class="language-plaintext highlighter-rouge">Preferences: Open Remote Settings (SSH: hotcake)</code> using <code class="language-plaintext highlighter-rouge">cmd + shift + p</code></p> <p>If vscode doesn’t recognize <code class="language-plaintext highlighter-rouge">zsh</code>, install it first.</p> <hr/> <h2 id="git-branch-output-issue">git branch output issue</h2> <p><a href="https://stackoverflow.com/questions/68413744/my-integrated-vscode-terminal-zsh-opens-git-cli-when-i-type-in-git-branch">link</a></p> <p><code class="language-plaintext highlighter-rouge">git config --global pager.branch false</code></p> <hr/> <h2 id="jupyter-notebook-permission-denied-docker">jupyter notebook, permission denied, docker</h2> <p><a href="https://github.com/jupyter/docker-stacks/issues/1187">link</a></p> <hr/> <h2 id="clone-a-repo-from-someone-elses-github-and-push-it-to-a-repo-on-my-github">Clone a repo from someone else’s Github and push it to a repo on my Github</h2> <p><a href="https://stackoverflow.com/questions/18200248/cloning-a-repo-from-someone-elses-github-and-pushing-it-to-a-repo-on-my-github/44076938#44076938">link1</a></p> <p><a href="https://www.studytonight.com/git-guide/git-origin-master">link2</a></p> <ul> <li> <p><code class="language-plaintext highlighter-rouge">git remote add origin &lt;remote repo address&gt;</code> : origin이란 이름의 <code class="language-plaintext highlighter-rouge">&lt;remote repo address&gt;</code> 나타내는 remote을 새로 만듬<br/> <code class="language-plaintext highlighter-rouge">error: remote origin already exists</code> : git clone 하면 remote이름이 default로 origin이라서 이미 있는듯</p> </li> <li> <p><code class="language-plaintext highlighter-rouge">git remote -v</code><br/> <code class="language-plaintext highlighter-rouge">origin &lt;...&gt; (fetch)</code><br/> <code class="language-plaintext highlighter-rouge">origin &lt;...&gt; (push)</code></p> </li> <li><code class="language-plaintext highlighter-rouge">git remote rename origin upstream</code> : 기존의 origin을 upstream으로 이름 바꿈</li> <li><code class="language-plaintext highlighter-rouge">git remote add origin &lt;repo on github&gt;</code> : 여기의 origin은 github에서 새로만든 repo를 나타냄 <code class="language-plaintext highlighter-rouge">&lt;repo on github&gt;</code> 은 내 github에서 new repo 만든거</li> </ul> <p>(위 두 단계 기존의 origin을 upstream 으로 바꾸고 다시 새로운 origin을 내 new repo on my Github으로 바꾸는 거임.<br/> 이 방법 대신에 <br/> <code class="language-plaintext highlighter-rouge">git remote set-url orign &lt;repo on my Github&gt;</code> 을 써서 upstream을 만드는 대신에 origin이 가리키고 있는 remote repo 주소를 바꿈)</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git remote
origin
upstream
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">git checkout -b origin</code> : create a branch “origin” (branch “main”은 이미 있던듯) <br/> 따라서 현재 local repo에 branch가 “origin”, “main” 두 개</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git branch
main
<span class="k">*</span> origin
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">git checkout main</code></li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git branch
<span class="k">*</span> main
origin
</code></pre></div></div> <p>Note. <code class="language-plaintext highlighter-rouge">Your branch is up to date with 'origin/main'</code> : 여기서 ‘origin/main’은 remote tracking branch 인데<br/> 결국 orignal denotes remote name and master denote the remote branch it is tracking.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/origin-master-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/origin-master-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/origin-master-1400.webp"/> <img src="/assets/img/origin-master.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <hr/> <h2 id="git-checkout--b-branch_name-vs-git-branch-branch_name"><code class="language-plaintext highlighter-rouge">git checkout -b &lt;branch_name&gt;</code> vs <code class="language-plaintext highlighter-rouge">git branch &lt;branch_name&gt;</code></h2> <p><code class="language-plaintext highlighter-rouge">git checkout -b &lt;branch_name&gt;</code>: creates a new branch and checks out (switch to) the new branch <code class="language-plaintext highlighter-rouge">git branch &lt;branch_name&gt;</code>: creates a new branch but leaves you on the same branch <code class="language-plaintext highlighter-rouge">git checkout &lt;branch_name&gt;</code>: check out (switches to) a new branch (copy from remote)</p> <p>Note that if you were on master branch and run git branch new_branch, both master and new_branch now point to the same commit.</p> <p>There are more: <code class="language-plaintext highlighter-rouge">git switch -c new_branch</code>, <code class="language-plaintext highlighter-rouge">git switch</code>, etc</p> <hr/>]]></content><author><name></name></author><category term="learning"/><summary type="html"><![CDATA[stuff I learned]]></summary></entry><entry><title type="html">Editing personal website</title><link href="https://junsukha.github.io/blog/2023/website/" rel="alternate" type="text/html" title="Editing personal website"/><published>2023-12-22T20:00:00+00:00</published><updated>2023-12-22T20:00:00+00:00</updated><id>https://junsukha.github.io/blog/2023/website</id><content type="html" xml:base="https://junsukha.github.io/blog/2023/website/"><![CDATA[<h2 id="toggle-latest-posts-news-selected-publications">toggle “latest posts”, “news”, “selected publications”</h2> <p>_pages/Go to about.md and update</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>news: false
latest_posts: false
selected_papers: false
</code></pre></div></div> <h2 id="change-the-number-of-posts-seen-on-a-page">change the number of posts seen on a page</h2> <p><code class="language-plaintext highlighter-rouge">per_page</code> in <code class="language-plaintext highlighter-rouge">index.html</code></p>]]></content><author><name></name></author><category term="learning"/><category term="personal-website"/><summary type="html"><![CDATA[How to edit personal website]]></summary></entry><entry><title type="html">mac os tips</title><link href="https://junsukha.github.io/blog/2023/mac-tips/" rel="alternate" type="text/html" title="mac os tips"/><published>2023-12-22T20:00:00+00:00</published><updated>2023-12-22T20:00:00+00:00</updated><id>https://junsukha.github.io/blog/2023/mac-tips</id><content type="html" xml:base="https://junsukha.github.io/blog/2023/mac-tips/"><![CDATA[<h2 id="homebrew-tips">homebrew tips</h2> <p>Manage packages using homebrew</p> <p><a href="https://velog.io/@franc/Homebrew%EB%A1%9C-%EB%82%98%EB%A7%8C%EC%9D%98-Mac-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0">link</a></p> <hr/> <h2 id="minize-windows-into-application-icon-or-not">minize windows into application icon or not</h2> <p>settings -&gt; Desktops &amp; Dock -&gt; Minimize windows into application icon</p> <hr/>]]></content><author><name></name></author><category term="mac"/><category term="tips"/><summary type="html"><![CDATA[tips for building your own mac]]></summary></entry><entry><title type="html">access ssh localhost</title><link href="https://junsukha.github.io/blog/2023/ssh/" rel="alternate" type="text/html" title="access ssh localhost"/><published>2023-12-22T18:23:00+00:00</published><updated>2023-12-22T18:23:00+00:00</updated><id>https://junsukha.github.io/blog/2023/ssh</id><content type="html" xml:base="https://junsukha.github.io/blog/2023/ssh/"><![CDATA[<p>Run from iterm (mac)</p> <p><code class="language-plaintext highlighter-rouge">ssh -L 9090:localhost:8000 jun@hotcake</code></p> <p>=&gt; mac’s 9090 port is tunneled to localhost (hotcake) 8000 port</p> <hr/> <p>Run from hotcake</p> <p><code class="language-plaintext highlighter-rouge">docker run -d --name api-server -p 8000:8000 part5-api-server</code></p> <p>=&gt; localhost (hotcake) port 8000 is connected to container’s 8000 port</p> <hr/> <p>Access to</p> <p><a href="http://localhost:9090/docs">link</a></p> <p>from mac edge browser</p> <hr/> <p>Use this for 1) MLflow Setup ML Engineer를 위한 MLOps (mlops-for-mle.github.io)</p> <p>ssh -L 9091:localhost:5001 jun@hotcake</p> <hr/> <h2 id="how-to-find-which-pid-is-using-which-port">How to find which PID is using which port?\</h2> <p><code class="language-plaintext highlighter-rouge">lsof -i:&lt;port&gt;</code><br/> ex) <code class="language-plaintext highlighter-rouge">lsof -i :8000</code></p> <hr/> <h2 id="history-command">History command</h2> <p>Use <code class="language-plaintext highlighter-rouge">history</code> to see previous commands I used in a terminal</p> <hr/> <h2 id="cat-procdrivernvidiaversion">cat /proc/driver/nvidia/version</h2> <p>Show current driver version (NVRM) nvidia-smi shows NVML library version</p> <h2 id="sudo-apt-purge-autoremove-nvidia-nvidiai386">sudo apt purge –autoremove ‘<em>nvidia</em>’ ‘<em>nvidia</em>:i386’</h2> <p>Remove nvidia packages</p> <h1 id="then-install-the-specific-driver-you-want">Then, install the specific driver you want</h1> <p>sudo apt install nvidia-driver-510</p> <p>#To check which is the recommended driver for your Nvidia card run:</p> <p>ubuntu-drivers devices</p> <p>#If you want to install the driver automatically, #run :</p> <p>sudo ubuntu-drivers autoinstall</p> <p>#If you want to install a specific driver version #(410, 440…), run:</p> <p>sudo apt install nvidia-<driver number=""></driver></p> <h1 id="show-current-version">Show current version</h1> <p>cat /proc/driver/nvidia/version</p> <p>sudo apt install nvidia-utils-470</p>]]></content><author><name></name></author><category term="learning"/><category term="ssh"/><summary type="html"><![CDATA[how to access localhost in a machine I sshed into]]></summary></entry><entry><title type="html">MLops</title><link href="https://junsukha.github.io/blog/2023/MLops/" rel="alternate" type="text/html" title="MLops"/><published>2023-12-22T17:17:00+00:00</published><updated>2023-12-22T17:17:00+00:00</updated><id>https://junsukha.github.io/blog/2023/MLops</id><content type="html" xml:base="https://junsukha.github.io/blog/2023/MLops/"><![CDATA[<h2 id="basic-usage-of-psycopg">basic usage of psycopg</h2> <p><a href="https://www.psycopg.org/docs/usage.html#query-parameters">Basic module usage — Psycopg 2.9.9 documentation</a></p> <hr/> <h2 id="close-and-remove-a-container">close and remove a container</h2> <div class="language-docker highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker stop "CONTAINTER ID"
docker rm "CONTAINER ID"
</code></pre></div></div> <p>Use <code class="language-plaintext highlighter-rouge">docker ps -a</code> to see all containers</p> <hr/> <h2 id="host-container">host, container</h2> <p><code class="language-plaintext highlighter-rouge">docker run -p 127.0.0.1:80:8080/tcp</code><br/> This means to bind port 8080 of the container to TCP port 80 on 127.0.0.1 of the host machine.</p> <hr/> <h2 id="any-installation-in-a-running-container-will-be-lost-as-soon-as-exiting-the-container">Any installation in a running container will be lost as soon as exiting the container</h2> <p><a href="https://stackoverflow.com/questions/63027514/install-package-in-running-docker-container">dockerfile - Install package in running docker container - Stack Overflow</a></p> <hr/> <h2 id="add-port-tunneling-between-mac-local-and-linux-remote-insidee-a-linux-remote-ie-i-ssh-into-linux-remote-from-mac-local">add port tunneling between mac (local) and linux (remote) insidee a linux (remote), i.e. I ssh into linux (remote) from mac (local)</h2> <p>press <code class="language-plaintext highlighter-rouge">shift</code> and <code class="language-plaintext highlighter-rouge">~</code> and <code class="language-plaintext highlighter-rouge">c</code>. Hold <code class="language-plaintext highlighter-rouge">shift</code> while hitting <code class="language-plaintext highlighter-rouge">~</code> and <code class="language-plaintext highlighter-rouge">c</code>.<br/> <code class="language-plaintext highlighter-rouge">-L 8888:hotcake:8888</code> : connect mac’s 8888 to hotcake’s (server) 8888.<br/> <a href="https://unix.stackexchange.com/questions/697825/add-port-forwarding-to-a-running-ssh-session">openssh - Add port forwarding to a running SSH session - Unix &amp; Linux Stack Exchange</a></p> <hr/> <h2 id="multiple-port-tunneling-when-ssh">multiple port tunneling when ssh</h2> <p><a href="https://stackoverflow.com/questions/29936948/ssh-l-forward-multiple-ports">ssh -L forward multiple ports - Stack Overflow</a></p> <hr/> <h2 id="how-to-find-a-docker-host-machines-ip-address-from-inside-a-container">how to find a docker host machine’s ip address from inside a container?</h2> <p><code class="language-plaintext highlighter-rouge">sudo ip addr show docker0</code> gives ip address of docker host machine (in my case 172.17.0.1)<br/> Also can identify ip address by <code class="language-plaintext highlighter-rouge">docker network inspect bridge</code><br/> Both commands above are run in hotcake (the machine sshed into)<br/> To see an ip address of a container, run <code class="language-plaintext highlighter-rouge">ip addr show eth0</code> inside a container.</p> <ul> <li>ex: <code class="language-plaintext highlighter-rouge">root@e77f6a1b3740:/# ip addr show eth0</code></li> </ul> <p><a href="https://stackoverflow.com/questions/24319662/from-inside-of-a-docker-container-how-do-i-connect-to-the-localhost-of-the-mach">nginx - From inside of a Docker container, how do I connect to the localhost of the machine? - Stack Overflow</a></p> <hr/> <h2 id="03-model-registry-2-save-model-to-registry">03. Model Registry 2) Save Model to Registry</h2> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">[</span><span class="sh">"</span><span class="s">MLFLOW_S3_ENDPOINT_URL</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="sh">"</span><span class="s">http://172.17.0.1:9005</span><span class="sh">"</span> <span class="c1"># when running in a container, should use host ip address instead of localhost?
</span><span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">[</span><span class="sh">"</span><span class="s">MLFLOW_TRACKING_URI</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="sh">"</span><span class="s">http://172.17.0.1:5001</span><span class="sh">"</span>
</code></pre></div></div> <p>Orignal version uses <code class="language-plaintext highlighter-rouge">"http://localhost:9005"</code> and <code class="language-plaintext highlighter-rouge">"http://localhost:5001"</code>. 9005 and 5001 are ports of Linux (remote machine) and are connected to 9091 and 9092 of mac (local) individually.</p> <hr/> <h2 id="how-to-debug-inside-a-container-with-vscode">How to debug inside a container with vscode</h2> <p>https://www.youtube.com/watch?v=w77D5KuJ7eE</p> <p>I think there are two ways: 1) access to a container with vscode from local (mac) 2) access to a conatiner with vscode from remote (linux); need to ssh from mac first</p> <p>Method 1): follow the video</p> <p>Method 2):</p> <ul> <li>Install <code class="language-plaintext highlighter-rouge">Remote Development</code> extension (I thought, for this method, the extension should be installed in linux machine but accessing container also works when the extension is installed on mac)</li> <li>click a bottom left button and select <code class="language-plaintext highlighter-rouge">access to running container</code></li> <li>choose a container (only currently running containers are visible)</li> </ul> <hr/> <h2 id="pushing-to-a-repo-that-i-cloned-from-someone-elses">Pushing to a repo that I cloned from someone else’s</h2> <p>https://stackoverflow.com/questions/18200248/cloning-a-repo-from-someone-elses-github-and-pushing-it-to-a-repo-on-my-github</p> <ol> <li>Create a new repository at http://github.com (don’t initialize README, .gitignore, license)</li> <li>Clone a repo of someone else’s to my local machine<br/> git clone</li> </ol>]]></content><author><name></name></author><category term="learning"/><category term="MLops"/><summary type="html"><![CDATA[Everything I learned about MLops]]></summary></entry><entry><title type="html">a post with TikZJax</title><link href="https://junsukha.github.io/blog/2023/tikzjax/" rel="alternate" type="text/html" title="a post with TikZJax"/><published>2023-12-12T22:25:00+00:00</published><updated>2023-12-12T22:25:00+00:00</updated><id>https://junsukha.github.io/blog/2023/tikzjax</id><content type="html" xml:base="https://junsukha.github.io/blog/2023/tikzjax/"><![CDATA[<p>This is an example post with TikZ code. TikZJax converts script tags (containing TikZ code) into SVGs.</p> <script type="text/tikz">
\begin{tikzpicture}
    \draw[red,fill=black!60!red] (0,0) circle [radius=1.5];
    \draw[green,fill=black!60!green] (0,0) circle [x radius=1.5cm, y radius=10mm];
    \draw[blue,fill=black!60!blue] (0,0) circle [x radius=1cm, y radius=5mm, rotate=30];
\end{tikzpicture}
</script>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[this is what included TikZ code could look like]]></summary></entry><entry><title type="html">a post with bibliography</title><link href="https://junsukha.github.io/blog/2023/post-bibliography/" rel="alternate" type="text/html" title="a post with bibliography"/><published>2023-07-12T13:56:00+00:00</published><updated>2023-07-12T13:56:00+00:00</updated><id>https://junsukha.github.io/blog/2023/post-bibliography</id><content type="html" xml:base="https://junsukha.github.io/blog/2023/post-bibliography/"><![CDATA[<p>This post shows how to add bibliography to simple blog posts. If you would like something more academic, check the <a href="/blog/2021/distill/">distill style post</a>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="bib"/><summary type="html"><![CDATA[an example of a blog post with bibliography]]></summary></entry></feed>